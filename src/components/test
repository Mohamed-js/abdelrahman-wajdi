import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { initializeApp } from "firebase/app";
import { getFirestore, collection, addDoc } from "firebase/firestore";
import { db } from "../helpers/firebase";

const Form = ({ isLoggedIn }) => {
  const [descriptions, setDescriptions] = useState([""]);
  const [images, setImages] = useState([""]);
  const [additionalDetails, setAdditionalDetails] = useState([]);
  const [newDescription, setNewDescription] = useState("");
  const [newImage, setNewImage] = useState("");
  const [selectedOption, setSelectedOption] = useState("");
  const [isFormValid, setIsFormValid] = useState(false);
  const [submitMessage, setSubmitMessage] = useState("");
  const navigate = useNavigate();

  useEffect(() => {
    const allDescriptionsFilled = descriptions.every((desc) => desc !== "");
    const allImagesUploaded = images.every((img) => img !== "");
    const isSelectOptionChosen = selectedOption !== "";
    setIsFormValid(allDescriptionsFilled && allImagesUploaded && isSelectOptionChosen);
  }, [descriptions, images, selectedOption]);

  useEffect(() => {
    if (submitMessage) {
      const timer = setTimeout(() => {
        setSubmitMessage("");
      }, 5000);
      return () => clearTimeout(timer); // Cleanup the timer on component unmount or when submitMessage changes
    }
  }, [submitMessage]);

  const handleAddDetail = () => {
    if (newDescription && newImage) {
      const newDetail = { description: newDescription, image: newImage };
      setAdditionalDetails([...additionalDetails, newDetail]); // Add new detail to the existing array
      setNewDescription("");
      setNewImage("");
    }
  };
  const handleAddDescription = () => {
    setDescriptions([...descriptions, ""]);
    setImages([...images, ""]);
  };

  const handleDescriptionChange = (index, value) => {
    const newDescriptions = [...descriptions];
    newDescriptions[index] = value;
    setDescriptions(newDescriptions);
  };

  const handleImageUpload = async (index, file) => {
    const formData = new FormData();
    formData.append("file", file);
    formData.append("upload_preset", "ca0qjdpw");

    try {
      const response = await fetch(
        `https://api.cloudinary.com/v1_1/dwawhl9j4/image/upload`,
        {
          method: "POST",
          body: formData,
        }
      );
      const data = await response.json();
      const newImages = [...images];
      newImages[index] = data.secure_url;
      setImages(newImages);
    } catch (error) {
      console.error("Error uploading image to Cloudinary", error);
    }
  };

  const handleOptionChange = (event) => {
    setSelectedOption(event.target.value);
  };

  const resetForm = () => {
    setDescriptions([""]);
    setImages([""]);
    setAdditionalDetails([]);
    setSelectedOption("");
    setIsFormValid(false);
  };

  const handleFormSubmit = async () => {
    if (isLoggedIn) {
      try {
        if (descriptions.length === 0 || images.length === 0) {
          // Check if descriptions or images arrays are empty
          alert("Please add at least one description and image.");
          return;
        }
  
        const newProduct = {
          firstDescription: descriptions[0],
          firstImage: images[0], // Ensure images array has at least one element
          selectedOption,
          additionalDetails: additionalDetails.map(detail => ({
            description: detail.description,
            image: detail.image
          }))
        };
        console.log(newProduct)
        await addDoc(collection(db, "formSubmissions"), newProduct);
        setSubmitMessage("Form submitted successfully!");
        resetForm();
      } catch (error) {
        console.error("Error submitting form data to Firebase", error);
        setSubmitMessage("Failed to submit form. Please try again.");
      }
    } else {
      alert("You must be logged in to submit the form.");
    }
  };

  return (
    <div className="flex justify-center py-32 items-center min-h-screen bg-gray-900 text-white">
      <div className="max-w-3xl w-full p-6 bg-gray-800 rounded-md shadow-md">
        <h2 className="text-2xl font-semibold mb-4">Form</h2>
        <form action="">
          <div className="h-[300px] overflow-y-auto p-4">
            {descriptions.map((desc, index) => (
              <div key={index} className="mb-4">
                <label
                  htmlFor={`description-${index}`}
                  className="block text-gray-300 font-medium mb-2"
                >
                  Description {index + 1}
                </label>
                <textarea
                  id={`description-${index}`}
                  value={descriptions[index]}
                  onChange={(e) => handleDescriptionChange(index, e.target.value)}
                  rows="3"
                  className="w-full px-3 py-2 border rounded-md bg-gray-700 focus:outline-none focus:ring focus:ring-blue-400 text-white"
                  required
                />
                <label
                  htmlFor={`image-${index}`}
                  className="block text-gray-300 font-medium mb-2 mt-4"
                >
                  Image {index + 1}
                </label>
                <input
                  type="file"
                  id={`image-${index}`}
                  onChange={(e) => handleImageUpload(index, e.target.files[0])}
                  className="w-full px-3 py-2 border rounded-md bg-gray-700 focus:outline-none focus:ring focus:ring-blue-400 text-white"
                  required
                />
                {images[index] && (
                  <img
                    src={images[index]}
                    alt={`Description ${index + 1}`}
                    className="mt-2 w-full rounded-md"
                  />
                )}
              </div>
            ))}
          </div>
          <div className="mb-4">
            <label
              htmlFor="select-option"
              className="block text-gray-300 font-medium mb-2"
            >
              Select Option
            </label>
            <select
              id="select-option"
              value={selectedOption}
              onChange={handleOptionChange}
              className="w-full px-3 py-2 border rounded-md bg-gray-700 focus:outline-none focus:ring focus:ring-blue-400 text-white"
              required
            >
              <option value="">Select...</option>
              <option value="Web Design">Web Design</option>
              <option value="Social Media Management">Social Media Management</option>
              <option value="Logo & Branding">Logo & Branding</option>
            </select>
          </div>
          <button
            type="button"
            onClick={handleAddDescription}
            className="w-full mt-4 bg-[#e6953e] text-white font-semibold px-4 py-2 rounded-md  hover:bg-[#f8ad5d]  focus:outline-none focus:ring  mb-4"
          >
            Add Description
          </button>
          <hr className="my-6" />
          {additionalDetails.map((detail, index) => (
            <div key={index} className="mb-4">
              <h3 className="text-lg font-semibold mb-2">
                Additional Detail {index + 1}
              </h3>
              <p className="mb-2">
                <strong>Description:</strong> {detail.description}
              </p>
              <p className="mb-2">
                <strong>Option:</strong> {detail.option}
              </p>
              <img
                src={detail.image}
                alt={`Additional Detail ${index + 1}`}
                className="w-full rounded-md mb-2"
              />
            </div>
          ))}
          <button
            type="button"
            onClick={() => {
              if (isFormValid) {
                handleFormSubmit();
                console.log("Form submitted");
              } else {
                alert("Please fill out all required fields.");
              }
            }}
            className={`w-full mt-4 bg-[#e6953e] text-white font-semibold px-4 py-2 rounded-md hover:bg-[#f8ad5d] focus:outline-none focus:ring ${
              !isFormValid ? "opacity-50 cursor-not-allowed" : ""
            }`}
            disabled={!isFormValid}
          >
            Submit Form
          </button>
          {submitMessage && (
            <div
              className={`mt-4 p-4 ${
                submitMessage.includes("successfully")
                  ? "bg-green-500"
                  : "bg-red-500"
              } text-white rounded-md`}
            >
              {submitMessage}
            </div>
          )}
        </form>
      </div>
    </div>
  );
};

export default Form;





















import React, { useEffect, useState } from "react";
import { Link, Element } from "react-scroll";
import bgImg from "../assets/imgs/bg-img.jpg";
import { useTranslation } from "react-i18next";
import "animate.css";
import { getFirestore, collection, getDocs } from "firebase/firestore";
import { db } from "../helpers/firebase"; 






export default function OurWorks() {
  const { t } = useTranslation();
  const direction = localStorage.getItem("selectedLanguage") === "ar" ? "rtl" : "ltr";
  const [workData, setWorkData] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      const worksCollectionRef = collection(db, "formSubmissions");
      const snapshot = await getDocs(worksCollectionRef);
      const worksData = snapshot.docs.map((doc) => ({
        id: doc.id,
        ...doc.data(),
      }));
      console.log(worksData)
      setWorkData(worksData);
    };

    fetchData();
  }, [db]);

  console.log(workData)
  return (
    <div className="bg-[#051118] min-h-screen py-32 w-screen overflow-hidden relative">
      <div className="absolute inset-0 bg-cover bg-center opacity-5" style={{ backgroundImage: `url(${bgImg})` }}></div>

      <h2 className="relative w-fit mx-auto text-3xl font-semibold leading-10 drop-shadow-md mb-12 capitalize text-[#b7e4ea] text-center animate__animated animate__fadeInDown">
        <svg
          className="absolute w-[200px] h-[200px] top-[-82px] left-[-35px] opacity-50 z-[-1]"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 2000 2000"
        >
          <g>
            <g fill="hsl(194, 45%, 50%)" id="star">
              <path
                d="M 500 500 C 1000 1000 1000 1000 1300 750 C 1000 1000 1000 1000 2000 2000 C 1000 1000 1000 1000 750 1300 C 1000 1000 1000 1000 500 500"
                strokeLinecap="round"
                strokeLinejoin="round"
              ></path>
            </g>
          </g>
        </svg>
        Our Works
      </h2>

      <div className="flex justify-center mb-8">
        <Link
          to="webDesign"
          spy={true}
          smooth={true}
          duration={500}
          className="mx-2 px-4 py-2 rounded-full font-semibold cursor-pointer transition bg-[#3d2f7a] hover:[] text-[#fffffc] hover:bg-[#e6953e] hover:text-white"
        >
          Web Design
        </Link>
        <Link
          to="socialMedia"
          spy={true}
          smooth={true}
          duration={500}
          className="mx-2 px-4 py-2 rounded-full font-semibold cursor-pointer transition bg-[#3d2f7a] text-[#fffffc] hover:bg-[#e6953e] hover:text-white"
        >
          Social Media Management
        </Link>
        <Link
          to="logoBranding"
          spy={true}
          smooth={true}
          duration={500}
          className="mx-2 px-4 py-2 rounded-full font-semibold cursor-pointer transition bg-[#3d2f7a] text-[#fffffc] hover:bg-[#e6953e] hover:text-white"
        >
          Logo & Branding
        </Link>
      </div>

      <div className="container mx-auto px-4">
        <Element name="webDesign">
          <div className="animate__animated animate__fadeIn animate__slow mb-16">
            <h3 className="text-2xl text-[#fffffc] mb-4">Web Design</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {/* Add your card components here */}
              <div className="bg-[#3d2f7a] rounded-lg p-4">
                <img src="https://via.placeholder.com/150" alt="Web Design 1" className="w-full mb-4 rounded" />
                <p className="text-[#fffffc]">Description for Web Design 1.</p>
              </div>
              <div className="bg-[#3d2f7a] rounded-lg p-4">
                <img src="https://via.placeholder.com/150" alt="Web Design 2" className="w-full mb-4 rounded" />
                <p className="text-[#fffffc]">Description for Web Design 2.</p>
              </div>
              <div className="bg-[#3d2f7a] rounded-lg p-4">
                <img src="https://via.placeholder.com/150" alt="Web Design 3" className="w-full mb-4 rounded" />
                <p className="text-[#fffffc]">Description for Web Design 3.</p>
              </div>
            </div>
          </div>
        </Element>

        <Element name="socialMedia">
          <div className="animate__animated animate__fadeIn animate__slow mb-16">
            <h3 className="text-2xl text-[#fffffc] mb-4">Social Media Management</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {/* Add your card components here */}
              <div className="bg-[#3d2f7a] rounded-lg p-4">
                <img src="https://via.placeholder.com/150" alt="Social Media 1" className="w-full mb-4 rounded" />
                <p className="text-[#fffffc]">Description for Social Media 1.</p>
              </div>
              <div className="bg-[#3d2f7a] rounded-lg p-4">
                <img src="https://via.placeholder.com/150" alt="Social Media 2" className="w-full mb-4 rounded" />
                <p className="text-[#fffffc]">Description for Social Media 2.</p>
              </div>
              <div className="bg-[#3d2f7a] rounded-lg p-4">
                <img src="https://via.placeholder.com/150" alt="Social Media 3" className="w-full mb-4 rounded" />
                <p className="text-[#fffffc]">Description for Social Media 3.</p>
              </div>
            </div>
          </div>
        </Element>

        <Element name="logoBranding">
          <div className="animate__animated animate__fadeIn animate__slow mb-16">
            <h3 className="text-2xl text-[#fffffc] mb-4">Logo & Branding</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {/* Add your card components here */}
              <div className="bg-[#3d2f7a] rounded-lg p-4">
                <img src="https://via.placeholder.com/150" alt="Logo & Branding 1" className="w-full mb-4 rounded" />
                <p className="text-[#fffffc]">Description for Logo & Branding 1.</p>
              </div>
              <div className="bg-[#3d2f7a] rounded-lg p-4">
                <img src="https://via.placeholder.com/150" alt="Logo & Branding 2" className="w-full mb-4 rounded" />
                <p className="text-[#fffffc]">Description for Logo & Branding 2.</p>
              </div>
              <div className="bg-[#3d2f7a] rounded-lg p-4">
                <img src="https://via.placeholder.com/150" alt="Logo & Branding 3" className="w-full mb-4 rounded" />
                <p className="text-[#fffffc]">Description for Logo & Branding 3.</p>
              </div>
            </div>
          </div>
        </Element>
      </div>
    </div>
  );
}




// import React, { useEffect, useRef } from "react";
// import { Parallax, ParallaxLayer } from "@react-spring/parallax";
// import styles from "../styles.module.css";
// import landingImg from "../assets/imgs/landing-image.png";
// import { MdKeyboardArrowRight } from "react-icons/md";
// import { MdKeyboardArrowLeft } from "react-icons/md";
// import lawyerLogo from "../assets/imgs/logo-.png";
// import lawyerWork from "../assets/imgs/lawyerWork.jpg";
// import shaza from "../assets/imgs/shaza.png";
// import futureStar1 from "../assets/imgs/future-star1.jpg";
// import futureStar2 from "../assets/imgs/future-star2.jpg";
// import healthStep from "../assets/imgs/healthsteps.png";
// import healthStep1 from "../assets/imgs/healthsteps1.png";
// import superGym1 from "../assets/imgs/super-gym1.jpg";
// import superGym3 from "../assets/imgs/super-gym3.jpg";
// import { useTranslation } from "react-i18next";
// const Page = ({ offset, gradient, title, description, onClick, img, logo }) => {
//   const direction =
//   localStorage.getItem("selectedLanguage") === "ar" ? "rtl" : "ltr";
//   const handleClick = () => {
//     onClick();
//   };

//   return (
//     <>
//       <ParallaxLayer offset={offset} speed={0.2} onClick={handleClick}>
//         <div className={styles.slopeBegin} />
//       </ParallaxLayer>

//       <ParallaxLayer offset={offset} speed={0.6} onClick={handleClick}>
//         <div className={`${styles.slopeEnd} ${styles[gradient]}`} />
//       </ParallaxLayer>

//       <ParallaxLayer className={`${styles.text}`} offset={offset} speed={0.3}>
//         <div className="  ">
//           <span className={`md:ml-4 ${direction === "ltr" ? "md:ml-4" : "md:mr-4"} mt-[90px] mb-8 flex justify-center ${direction === "ltr" ? "md:justify-start" : "md:justify-end"} w-full md:w-auto`}>
//             <img src={logo} className=" max-w-[120px] rounded-full" />
//           </span>
//           <div className="flex justify-center items-start h-screen ">
//             <div className="bg-gray-800 rounded-lg shadow-lg overflow-hidden max-w-[600px] mx-12 min-w-[70%] md:min-w-[500px]">
//               <div className="relative">
//                 <img
//                   src={img}
//                   className="w-full h-auto max-h-[200px] object-contain rounded-t-lg"
//                   alt="Card Image"
//                 />
//                 <div className="absolute inset-0 bg-gradient-to-b from-transparent to-black opacity-75"></div>
//               </div>
//               <div className="p-4">
//                 <h1 className="text-white text-base md:text-3xl text-center mb-4">
//                   {title}
//                 </h1>
//                 <p className="text-gray-300 text-base md:text-lg text-center">
//                   {description}
//                 </p>
//               </div>
//             </div>
//           </div>
//         </div>
//       </ParallaxLayer>
//     </>
//   );
// };

// export default function OurWorks() {
//   const { t } = useTranslation();

//   const parallax = useRef(null);
//   const totalPages = 4; // Update this to the total number of pages

//   const scroll = (to) => {
//     if (parallax.current) {
//       const currentOffset = parallax.current.offset;
//       let newOffset;

//       if (to === "next") {
//         newOffset = currentOffset < totalPages - 1 ? currentOffset + 1 : 0;
//       } else if (to === "prev") {
//         newOffset = currentOffset > 0 ? currentOffset - 1 : totalPages - 1;
//       } else {
//         newOffset = to;
//       }

//       parallax.current.scrollTo(newOffset);
//     }
//   };

//   const ourWorks = [
//     {
//       title: t("ourWorks.title1"),
//       description: t("ourWorks.description1"),
//       gradient: "pink",
//       img: lawyerWork,
//       logo: lawyerLogo,
//     },
//     {
//       title: t("ourWorks.title2"),
//       description: t("ourWorks.description2"),
//       gradient: "teal",
//       img: futureStar2,
//       logo: futureStar1,
//     },
//     {
//       title: t("ourWorks.title3"),
//       description: t("ourWorks.description3"),
//       gradient: "tomato",
//       img: healthStep1,
//       logo: healthStep,
//     },
//     {
//       title: t("ourWorks.title4"),
//       description: t("ourWorks.description4"),
//       gradient: "pink",
//       img: shaza,
//       logo: shaza,
//     },
//   ];
//   useEffect(() => {
//     window.scrollTo(0, 0); // Ensure scroll position is at the top on initial load
//   }, []);

//   return (
//     <div style={{ background: "#dfdfdf" }} dir="ltr">
//       <div className="fixed left-2  md:left-4 top-1/2 transform -translate-y-1/2 text-4xl md:text-6xl text-[#fddc15] z-30 cursor-pointer">
//         <MdKeyboardArrowLeft onClick={() => scroll("prev")} />
//       </div>
//       <div className="fixed right-2  md:right-4 top-1/2 transform -translate-y-1/2 text-4xl md:text-6xl text-[#fddc15] z-30 cursor-pointer">
//         <MdKeyboardArrowRight onClick={() => scroll("next")} />
//       </div>
//       <Parallax
//         className={styles.container}
//         style={{ overflow: "hidden" }}
//         ref={parallax}
//         pages={4}
//         horizontal
//       >
//         {ourWorks.map((work, index) => (
//           <Page
//             key={index}
//             offset={index}
//             title={work.title}
//             description={work.description}
//             img={work.img}
//             logo={work.logo}
//             gradient={work.gradient}
//             onClick={() => scroll("next")}
//           />
//         ))}
//       </Parallax>
//     </div>
//   );
// }

